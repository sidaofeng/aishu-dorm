<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.waken.dorm.dao.auth.RoleMapper">

    <select id="rolePage" parameterType="com.waken.dorm.common.form.role.QueryRoleForm"
            resultType="com.waken.dorm.common.view.role.RoleView">
        SELECT
        r.id,
        r.name,
        r.code,
        r.description,
        r.`status`,
        r.create_time AS createTime,
        u.user_name AS createUserName,
        r.last_modify_time AS lastModifyTime,
        uu.user_name AS lastModifyUserName
        FROM rm_role r
        LEFT JOIN rm_user u ON u.user_id = r.create_user_id
        LEFT JOIN rm_user uu ON uu.user_id = r.last_modify_user_id
        <where>
            <if test="form.id != null and form.id != ''">
                and r.id=#{form.id}
            </if>
            <if test="form.keywords != null and form.keywords != ''">
                <bind name="form.keywords" value="'%' + form.keywords + '%'"/>
                AND (r.name LIKE #{form.keywords}
                OR r.description LIKE #{form.keywords}
                OR u.user_name LIKE #{form.keywords}
                OR uu.user_name LIKE #{form.keywords}
                )
            </if>
            <if test="form.startTime != null">
                AND r.create_time &gt;= #{form.startTime,jdbcType=TIMESTAMP}
            </if>
            <if test="form.endTime != null">
                AND r.create_time &lt;= #{form.endTime,jdbcType=TIMESTAMP}
            </if>
        </where>
        ORDER BY
        r.last_modify_time DESC
    </select>

    <select id="listAddedRoles" parameterType="com.waken.dorm.common.form.role.ListAddedRoleForm"
            resultType="com.waken.dorm.common.view.user.UserRoleRelView">
        SELECT
        p.id AS pkUserRoleId,
        r.id AS roleId,
        r.name AS roleName,
        r.description AS description
        FROM
        rm_role r
        INNER JOIN rm_user_role_rel p ON p.role_id = r.id
        WHERE
        r.`status` = 1
        AND r.id
        IN(
        SELECT up.role_id FROM rm_user_role_rel up
        WHERE up.user_id=#{curUserId}
        )
        <if test="userId != null and userId != ''">
            AND p.user_id=#{userId,jdbcType=VARCHAR}
        </if>
        UNION
        SELECT
        '' AS pkUserRoleId,
        r.id AS roleId,
        r.name AS roleName,
        r.description AS description
        FROM
        rm_role r
        WHERE
        r.`status` = 1
        AND r.id
        IN(
        SELECT up.role_id FROM rm_user_role_rel up
        WHERE up.user_id=#{curUserId}
        )
        AND NOT EXISTS (
        SELECT
        *
        FROM
        rm_user_role_rel p
        WHERE
        p.role_id = r.id
        <if test="userId != null and userId != ''">
            AND p.user_id=#{userId,jdbcType=VARCHAR}
        </if>
        )
    </select>
    <select id="listSuperAdminRoles" parameterType="java.lang.String"
            resultType="com.waken.dorm.common.view.user.UserRoleRelView">
        SELECT
        p.id AS pkUserRoleId,
        r.id AS roleId,
        r.name AS roleName,
        r.description AS description
        FROM
        rm_role r
        INNER JOIN rm_user_role_rel p ON p.role_id = r.id
        WHERE
        AND r.`status` = 1
        AND p.user_id=#{userId,jdbcType=VARCHAR}
        UNION
        SELECT
        '' AS pkUserRoleId,
        r.id AS roleId,
        r.name AS roleName,
        r.description AS description
        FROM
        rm_role r
        WHERE
        r.`status` = 1
        AND NOT EXISTS (
        SELECT
        *
        FROM
        rm_user_role_rel p
        WHERE
        AND p.role_id = r.id
        AND p.user_id=#{userId,jdbcType=VARCHAR}
        )
    </select>
    <select id="listUserRole" resultType="com.waken.dorm.common.view.role.UserRoleView">
        SELECT
        r.id,
        r.name
        FROM rm_role r
        WHERE r.`status` = 1
    </select>
    <update id="batchUpdateStatus" parameterType="java.util.Map">
        <foreach collection="list" separator=";" item="ur">
            update rm_role set
            status = #{ur.status},
            last_modify_time = #{ur.lastModifyTime},
            last_modify_user_id = #{ur.lastModifyUserId}
            where id = #{ur.pkId}
        </foreach>
    </update>
</mapper>