<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.waken.dorm.dao.role.RoleMapper">
    <resultMap id="BaseResultMap" type="com.waken.dorm.common.entity.role.Role">
        <id column="pk_role_id" property="pkRoleId" jdbcType="VARCHAR"/>
        <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
        <result column="role_desc" property="roleDesc" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="create_user_id" property="createUserId" jdbcType="VARCHAR"/>
        <result column="last_modify_time" property="lastModifyTime" jdbcType="TIMESTAMP"/>
        <result column="last_modify_user_id" property="lastModifyUserId" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        pk_role_id, role_name, role_desc, status, create_time, create_user_id, last_modify_time,
        last_modify_user_id
    </sql>
    <select id="listAddedRoles" parameterType="com.waken.dorm.common.form.role.ListAddedRoleForm"
            resultType="com.waken.dorm.common.view.user.UserRoleRelView">
        SELECT
        ur.pk_user_role_id AS pkUserRoleId,
        r.pk_role_id AS roleId,
        r.role_name AS roleName,
        r.role_desc AS roleDesc
        FROM
        rm_role r
        INNER JOIN rm_user_role_rel ur ON ur.role_id = r.pk_role_id
        WHERE
        r.`status` = 1
        AND r.pk_role_id IN(SELECT urr.role_id FROM rm_user_role_rel urr WHERE urr.user_id=#{curUserId})
        <if test="userId != null and userId != ''">
            AND ur.user_id=#{userId,jdbcType=VARCHAR}
        </if>
        UNION
        SELECT
        '' AS pkUserRoleId,
        r.pk_role_id AS roleId,
        r.role_name AS roleName,
        r.role_desc AS roleDesc
        FROM
        rm_role r
        WHERE
        r.`status` = 1
        AND r.pk_role_id IN(SELECT urr.role_id FROM rm_user_role_rel urr WHERE urr.user_id=#{curUserId})
        AND NOT EXISTS (
        SELECT
        *
        FROM
        rm_user_role_rel ur
        WHERE
        ur.role_id = r.pk_role_id
        <if test="userId != null and userId != ''">
            AND ur.user_id=#{userId,jdbcType=VARCHAR}
        </if>
        )
    </select>
    <select id="listSuperAdminRoles" parameterType="java.lang.String"
            resultType="com.waken.dorm.common.view.user.UserRoleRelView">
        SELECT
        ur.pk_user_role_id AS pkUserRoleId,
        r.pk_role_id AS roleId,
        r.role_name AS roleName,
        r.role_desc AS roleDesc
        FROM
        rm_role r
        INNER JOIN rm_user_role_rel ur ON ur.role_id = r.pk_role_id
        WHERE
        r.`status` = 1
        AND ur.user_id=#{userId,jdbcType=VARCHAR}
        UNION
        SELECT
        '' AS pkUserRoleId,
        r.pk_role_id AS roleId,
        r.role_name AS roleName,
        r.role_desc AS roleDesc
        FROM
        rm_role r
        WHERE
        r.`status` = 1
        AND NOT EXISTS (
        SELECT
        *
        FROM
        rm_user_role_rel ur
        WHERE
        ur.role_id = r.pk_role_id
        AND ur.user_id=#{userId,jdbcType=VARCHAR}
        )
    </select>
    <select id="listUserRoleInfo" parameterType="java.lang.String"
            resultType="com.waken.dorm.common.view.user.UserRoleRelView">
        SELECT
        ur.pk_user_role_id AS pkUserRoleId,
        r.pk_role_id AS roleId,
        r.role_name AS roleName,
        r.role_desc AS roleDesc
        FROM
        rm_role r
        LEFT JOIN rm_user_role_rel ur ON ur.role_id = r.pk_role_id AND r.`status` != 0
        WHERE
        ur.`status` != 0
        AND ur.user_id=#{curUserId,jdbcType=VARCHAR}
    </select>
    <select id="listUserRole" resultType="com.waken.dorm.common.view.role.UserRoleView">
        SELECT
        r.pk_role_id AS roleId,
        r.role_name AS roleName
        FROM rm_role r
        WHERE r.`status` = 1
    </select>
    <update id="batchUpdateStatus" parameterType="java.util.Map">
        <foreach collection="list" separator=";" item="ur">
            update rm_role set
            status = #{ur.status},
            last_modify_time = #{ur.lastModifyTime},
            last_modify_user_id = #{ur.lastModifyUserId}
            where pk_role_id = #{ur.pkId}
        </foreach>
    </update>
</mapper>